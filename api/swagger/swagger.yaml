---
swagger: "2.0"
info:
  description: "A fitness API that provides workout routines and related nutrition\
    \ information."
  version: "1.0.0"
  title: "EpicLand API"
  contact:
    name: "MPM FITNIT"
host: "localhost:10010"
basePath: "/"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /exercises:
    get:
      description: "returns all exercises"
      operationId: "getAllExercises"
      parameters: []
      responses:
        200:
          description: "get array of all exercises"
          schema:
            type: "array"
            items:
              type: "object"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "exercises"
  /exercises/{id}:
    get:
      description: "Returns a specific exercise based on a single ID."
      operationId: "findExerciseById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of exercise to fetch"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "exercise response"
          schema:
            $ref: "#/definitions/exercise"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "exercises"
  /users:
    post:
      description: "Creates a new user in the database"
      operationId: "addNewUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "newUser"
        description: "new user to add to the database"
        required: true
        schema:
          $ref: "#/definitions/newUser"
      responses:
        200:
          description: "New user response"
          schema:
            $ref: "#/definitions/user"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "users"
  /users/{id}:
    get:
      description: "Returns a user information based on a single ID. The user must\
        \ be authorized to access."
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the user to fetch"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "user-specific response"
          schema:
            $ref: "#/definitions/user"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "users"
    delete:
      description: "deletes a single user from the database."
      operationId: "deleterUser"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the user to delete"
        required: true
        type: "integer"
        format: "int32"
      responses:
        204:
          description: "user deleted"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "users"
    patch:
      description: "updates specified properties of the specific user."
      operationId: "patchUserProfile"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of specified user"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "jsonPatch"
        required: true
        schema:
          $ref: "#/definitions/updateUser"
      responses:
        200:
          description: "user profile response"
          schema:
            $ref: "#/definitions/user"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "users"
  /exercises/types:
    get:
      description: "returns all exercise types"
      operationId: "getAllExerciseTypes"
      parameters: []
      responses:
        200:
          description: "produces array of all exercise types"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/exercise_types"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "exercises"
  /exercises/types/{id}:
    get:
      description: "Returns specific exercise type based on ID"
      operationId: "getExerciseTypeById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of exercise type to get"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "ID of exercise response"
          schema:
            $ref: "#/definitions/exercise_types"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "exercises"
  /equipment:
    get:
      description: "returns all exercise types"
      operationId: "getAllEquipmentTypes"
      parameters: []
      responses:
        200:
          description: "produces array of all equipment types"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/equipment"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "equipment"
  /equipment/{id}:
    get:
      description: "Returns specific exercise type based on ID"
      operationId: "getEquipmentById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of equipment type to get"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "response of equipment info"
          schema:
            $ref: "#/definitions/equipment"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "equipment"
  /muscles:
    get:
      description: "returns all muscle types"
      operationId: "getAllMuscles"
      parameters: []
      responses:
        200:
          description: "produces array of all muscle types"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/muscles"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "muscles"
  /muscles/{id}:
    get:
      description: "Returns specific exercise type based on ID"
      operationId: "getMuscleById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of muscle type to get"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "response of muscle type info"
          schema:
            $ref: "#/definitions/muscles"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "muscles"
  /routines:
    get:
      description: "returns"
      produces:
      - "application/json"
      operationId: "getRandomRoutines"
      parameters:
      - in: query
        name: muscleGroup
        description: muscle names to be filtered
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: "produces array of exercise objects"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                name:
                  type: "string"
                type:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                    name:
                      type: "string"
                muscle:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                    name:
                      type: "string"
                    size:
                      type: "string"
                equipment:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                    name:
                      type: "string"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "routines"
definitions:
  exercise:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"

  newUser:
    type: "object"
    required:
    - "email"
    - "first_name"
    - "last_name"
    - "password"
    - "weight"
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      weight:
        type: "integer"
        format: "int32"
  user:
    type: "object"
    required:
    - "email"
    - "first_name"
    - "id"
    - "last_name"
    - "password"
    - "weight"
    properties:
      id:
        type: "integer"
        format: "int64"
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      weight:
        type: "integer"
        format: "int32"
  updateUser:
    type: "object"
    required:
    - "password"
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      weight:
        type: "integer"
        format: "int32"
  exercise_types:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  equipment:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  muscles:
    type: "object"
    required:
    - "id"
    - "name"
    - "size"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      size:
        type: "string"
  errorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
